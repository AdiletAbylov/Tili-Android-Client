<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		title="Русско &lt;–&gt; кыргызский словарь"
		keyDown="hardware_keyDownHandler(event)"
		creationComplete="init(event)"
		>
	
	<fx:Script>
		<![CDATA[
			import business.SearchDelegate;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.Responder;
			
			
			protected function searchClickHandler(event:MouseEvent):void
			{
				searchButton.enabled = false;
				var delegate:SearchDelegate = new SearchDelegate(new mx.rpc.Responder(onSearchResult, onFault));
				delegate.search(searchInput.text);
				busyIndicator.visible = true;
				searchFailedStatus.text = "";
			}
			
			private function onSearchResult(data:Object):void
			{
				busyIndicator.visible = false;
				
				if( (data as Array).length > 0)
				{
					navigator.pushView(ResultListView, {result: new ArrayCollection( data as Array), keyword:searchInput.text});
				}else
				{
					searchFailedStatus.text = "Слово отсутствует в словарях :(";
					searchButton.enabled = true;
					
				}
			}
			
			private function onFault(fault:Object):void
			{
				trace(fault);
				busyIndicator.visible = false;
				searchFailedStatus.text = "Произошла ошибка при поиске слова :(";
				searchButton.enabled = true;
			}
			
			protected function additionalButtonsClick(event:MouseEvent):void
			{
				switch(event.currentTarget)
				{
					case oButton:
						searchInput.appendText("ө");
						break;
					
					case yButton:
						searchInput.appendText("ү");
						break;
					
					case nButton:
						searchInput.appendText("ң");
						break;
				}
			}
			
			protected function label1_clickHandler(event:MouseEvent):void
			{
				navigateToURL( new URLRequest("http://tili.kg"));
			}
			
			protected function hardware_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.BACK)
				{
					NativeApplication.nativeApplication.exit();
				}
			}
			
			protected function init(event:FlexEvent):void
			{
				if( NetworkInfo.isSupported )
				{
					NetworkInfo.networkInfo.addEventListener(Event.NETWORK_CHANGE, onNetworkChange);
					checkNetworkState();
				}
			}
			
			protected function onNetworkChange(event:Event):void
			{
				checkNetworkState();
			}
			
			private function checkNetworkState():void
			{
				var interfaces:Vector.<NetworkInterface> = NetworkInfo.networkInfo.findInterfaces();
				for(var i:uint = 0; i < interfaces.length; i++) 
				{
					if(interfaces[i].name.toLowerCase() == "wifi" && interfaces[i].active) 
					{
						currentState = "State1";
						return;

					}
					else 
						if(interfaces[i].name.toLowerCase() == "mobile" && interfaces[i].active) 
						{
							currentState = "State1";
							return;
						}else
						{
							currentState = "NoConnectionState";

						}
				}
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="State1"/>
		<s:State name="NoConnectionState"/>
	</s:states>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:TextInput id="searchInput" includeIn="State1" left="10" right="10" top="10"
				 prompt="Введите слово"/>
	<s:Button id="searchButton" includeIn="State1" left="10" right="9" top="102" label="Искать"
			  click="searchClickHandler(event)" enabled="{searchInput.text.length &gt; 0}"/>
	<s:BusyIndicator id="busyIndicator" right="13" top="13" visible="false"/>
	<s:BitmapImage source="@Embed('assets/exclamation-circle.png')"
				   includeIn="NoConnectionState"
				   left.NoConnectionState="5" top.NoConnectionState="5"
				   smooth.NoConnectionState="true"/>
	<s:Label id="searchFailedStatus" fontStyle="normal" textAlign="center" textDecoration="none"
			 left.NoConnectionState="61" right.NoConnectionState="5" top.NoConnectionState="10"
			 color.NoConnectionState="#FF0000" textAlign.NoConnectionState="left"
			 text.NoConnectionState="Для работы приложения требуется интернет соединение по мобильной сети или Wi-Fi."
			 left.State1="10" right.State1="10" top.State1="153"/>
	<s:HGroup includeIn="State1" left="10" right="10" top="50" height="44" gap="15"
			  verticalAlign="top">
		<s:Button width="100%" label="Ө" id="oButton" click="additionalButtonsClick(event)"/>
		<s:Button width="100%" label="Ү" id="yButton" click="additionalButtonsClick(event)"/>
		<s:Button width="100%" label="Ң" id="nButton" click="additionalButtonsClick(event)"/>
	</s:HGroup>
	<s:Label bottom="10" horizontalCenter="0" text="http://tili.kg" textAlign="center"
			 textDecoration="underline" click="label1_clickHandler(event)"/>
</s:View>
